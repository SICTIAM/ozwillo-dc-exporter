buildscript {
	ext {
		springBootVersion = '1.3.3.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
	}
}

plugins {
	id "com.moowork.node" version "0.11"
}

apply plugin: 'java'
apply plugin: 'spring-boot'

jar {
	baseName = 'ozwillo-dc-exporter'
	version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

node {
	version = '5.6.0'
	npmVersion = '3.3.12'
	download = true
}

repositories {
	mavenCentral()
	mavenLocal()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-data-mongodb')
	compile('org.springframework.boot:spring-boot-devtools')
	compile('org.springframework.boot:spring-boot-starter-jersey')
	compile('org.springframework.boot:spring-boot-starter-mail')
	compile('org.springframework.retry:spring-retry')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.session:spring-session')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-websocket')

	compile('org.ozwillo:ozwillo-java-spring-integration:1.24-SNAPSHOT')
	compile('eu.trentorise.opendata:jackan:0.4.3-SNAPSHOT')

	testCompile('org.springframework.boot:spring-boot-starter-test') 
}

bootRun {
    // needed for hot reload of thymeleaf templates
    addResources = true
}

springBoot {
    // exclude Spring Boot Devtools from the fat jar
    excludeDevtools = true
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.9'
}

configure(tasks.processResources) {
	// we don't want source JSX in the jar, we only need their transpiled, bundled version in build/
	exclude 'public/jsx/'
	exclude 'public/css/'
}

task frontBundle(type: NpmTask) {
	args = ['run', 'build']
}

processResources.dependsOn(frontBundle)
